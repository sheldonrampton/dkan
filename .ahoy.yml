version: 0.0.0
commands:
  init:
    cmd: "echo 'Actually, you don't want to do that. "
    usage: List the running docker-compose containers.

  dkan-build-site:
    cmd: "drush make --prepare-install drupal-org-core.make docroot --yes && ln -s ../../ docroot/profiles/dkan && drush -y si minimal --root=docroot --sites-subdir=default --db-url={{args}}"
    usage: 'Builds a fully operational drupal site for dkan development in ./docroot. You must pass in the database url. Note: to install dkan also run dkan-remake and dkan-reinstall.'

  dkan-remake:
    cmd: 'drush -y make --no-core --contrib-destination=./ "drupal-org.make" --no-recursion --concurrency=3'
    usage: Rebuild all the dkan projects from the drupal-org.make file.

  dkan-reinstall:
    cmd:  'drush si dkan --root=docroot  --site-name="DKAN" install_configure_form.update_status_module="array(FALSE,FALSE)" --yes'
    usage: Rebuild all the dkan projects from the drupal-org.make file.

  docker-up:
    cmd: "docker-compose up -d {{args}}"
    usage: List the running docker-compose containers.

  docker-init:
    cmd: "alias drush='ahoy drush --'"
    usage: Setup a drush alias to use the docker version.

  docker-stop:
    cmd: "docker-compose stop {{args}}"
    usage: Stop the docker-compose containers.

  docker-restart:
    cmd: "docker-compose restart {{args}}"
    usage: Restart the docker-compose containers.

  drush:
    cmd: "docker exec -it $(docker-compose ps -q cli) bash -c 'drush --root=docroot {{args}}'"
    usage: Run drush commands in the cli service container.

  bash:
    cmd: "docker exec -it $(docker-compose ps -q {{args}}) bash"
    usage: Start a shell in the container (like ssh without actual ssh).

  mysql:
    cmd: "docker exec -it $(docker-compose ps -q cli) bash -c 'mysql -u$DB_ENV_MYSQL_USER -p$DB_ENV_MYSQL_PASSWORD -h$DB_PORT_3306_TCP_ADDR $DB_ENV_MYSQL_DATABASE'"
    usage: Connect to the default mysql database client.

  mysql-import:
    cmd: "docker exec -i $(docker-compose ps -q cli) bash -c 'mysql -u$DB_ENV_MYSQL_USER -p$DB_ENV_MYSQL_PASSWORD -h$DB_PORT_3306_TCP_ADDR $DB_ENV_MYSQL_DATABASE'"
    usage: Import data into the default mysql database. `ahoy mysql-import < my-backup.sql`

  mysql-dump:
    cmd: "docker exec -i $(docker-compose ps -q cli) bash -c 'mysqldump -u$DB_ENV_MYSQL_USER -p$DB_ENV_MYSQL_PASSWORD -h$DB_PORT_3306_TCP_ADDR $DB_ENV_MYSQL_DATABASE'"
    usage: Connect to the default mysql database. Supports piping of data into the command.

  behat:
    cmd: 'docker-compose run cli bash -c "cd docroot/test && bin/behat -p docker {{args}}"'
    usage: Run the data_starter behat tests within the container.

  dkan-behat:
    cmd: 'docker-compose run cli bash -c "cd docroot/profiles/dkan/test && bin/behat -p docker {{args}}"'
    usage: Run the DKAN behat tests within the container.

#  dkan-remake:
#    cmd: 'docker-compose run cli bash -c "drush -y make --no-core --contrib-destination=./docroot/profiles/dkan/ ./docroot/profiles/dkan/drupal-org.make --no-recursion --concurrency=3"'
#    usage: Run the DKAN behat tests within the container.

  behat-init:
    cmd: 'docker-compose run cli bash -c "cd docroot/test && composer install --prefer-source --no-interaction"'
    usage: Use composer to install behat dependencies.
